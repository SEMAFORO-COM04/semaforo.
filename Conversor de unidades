{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wQkgE91fFd1q","executionInfo":{"status":"ok","timestamp":1721729833401,"user_tz":300,"elapsed":35406,"user":{"displayName":"Rosangel Garied Angulo Sarmiento","userId":"01068986647573871131"}},"outputId":"1f279ef4-1f23-4b0e-aa2d-9a492823f6c9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Seleccione el tipo de conversión (longitud, temperatura, peso): temperatura\n","Unidades disponibles para temperatura: ['celsius', 'fahrenheit']\n","Ingrese la cantidad a convertir: 50\n","Ingrese la unidad de origen: celsius\n","Ingrese la unidad de destino: fahrenheit\n","50.0 celsius son 122.0 fahrenheit.\n"]}],"source":["# Conversor de Unidades\n","\n","#Este programa está hecho para que el usuario pueda convertir cierta cantidad de una unidad a otra unidad. Incluye peso, temperatura y longitud\n","\n","\n","# Funciones para conversión de longitud\n","def metros_a_kilometros(metros):\n","    # Convierte metros a kilómetros\n","    return metros / 1000\n","\n","def kilometros_a_metros(kilometros):\n","    # Convierte kilómetros a metros\n","    return kilometros * 1000\n","\n","def pies_a_metros(pies):\n","    # Convierte pies a metros\n","    return pies * 0.3048\n","\n","def metros_a_pies(metros):\n","    # Convierte metros a pies\n","    return metros / 0.3048\n","\n","def millas_a_kilometros(millas):\n","    # Convierte millas a kilómetros\n","    return millas * 1.60934\n","\n","def kilometros_a_millas(kilometros):\n","    # Convierte kilómetros a millas\n","    return kilometros / 1.60934\n","\n","# Funciones para conversión de temperatura\n","def celsius_a_fahrenheit(celsius):\n","    # Convierte grados Celsius a Fahrenheit\n","    return (celsius * 9/5) + 32\n","\n","def fahrenheit_a_celsius(fahrenheit):\n","    # Convierte grados Fahrenheit a Celsius\n","    return (fahrenheit - 32) * 5/9\n","\n","# Funciones para conversión de peso\n","def kilogramos_a_libras(kg):\n","    # Convierte kilogramos a libras\n","    return kg * 2.20462\n","\n","def libras_a_kilogramos(libras):\n","    # Convierte libras a kilogramos\n","    return libras / 2.20462\n","\n","def gramos_a_kilogramos(gramos):\n","    # Convierte gramos a kilogramos\n","    return gramos / 1000\n","\n","def kilogramos_a_gramos(kilogramos):\n","    # Convierte kilogramos a gramos\n","    return kilogramos * 1000\n","\n","# Solicitar al usuario que seleccione el tipo de conversión\n","tipo_conversion = input(\"Seleccione el tipo de conversión (longitud, temperatura, peso): \").lower()\n","\n","if tipo_conversion == \"longitud\":\n","    unidades = [\"metros\", \"kilómetros\", \"pies\", \"millas\"]\n","elif tipo_conversion == \"temperatura\":\n","    unidades = [\"celsius\", \"fahrenheit\"]\n","elif tipo_conversion == \"peso\":\n","    unidades = [\"kilogramos\", \"libras\", \"gramos\"]\n","else:\n","    print(\"Tipo de conversión no soportada.\")\n","    exit()\n","\n","print(f\"Unidades disponibles para {tipo_conversion}: {unidades}\")\n","\n","# Solicitar al usuario que ingrese la cantidad que desea convertir\n","try:\n","    cantidad = float(input(\"Ingrese la cantidad a convertir: \"))\n","except ValueError:\n","    print(\"Por favor, ingrese un número válido para la cantidad.\")\n","    exit()\n","\n","# Solicitar al usuario que seleccione las unidades de origen y destino\n","unidad_origen = input(\"Ingrese la unidad de origen: \").lower()\n","unidad_destino = input(\"Ingrese la unidad de destino: \").lower()\n","\n","# Función para seleccionar la conversión correcta\n","def convertir(cantidad, unidad_origen, unidad_destino, tipo_conversion):\n","    # Realiza la conversión según el tipo seleccionado\n","    if tipo_conversion == \"longitud\":\n","        if unidad_origen == \"metros\" and unidad_destino == \"kilómetros\":\n","            return metros_a_kilometros(cantidad)\n","        elif unidad_origen == \"kilómetros\" and unidad_destino == \"metros\":\n","            return kilometros_a_metros(cantidad)\n","        elif unidad_origen == \"pies\" and unidad_destino == \"metros\":\n","            return pies_a_metros(cantidad)\n","        elif unidad_origen == \"metros\" and unidad_destino == \"pies\":\n","            return metros_a_pies(cantidad)\n","        elif unidad_origen == \"millas\" and unidad_destino == \"kilómetros\":\n","            return millas_a_kilometros(cantidad)\n","        elif unidad_origen == \"kilómetros\" and unidad_destino == \"millas\":\n","            return kilometros_a_millas(cantidad)\n","        else:\n","            return \"Conversión no soportada.\"\n","    elif tipo_conversion == \"temperatura\":\n","        if unidad_origen == \"celsius\" and unidad_destino == \"fahrenheit\":\n","            return celsius_a_fahrenheit(cantidad)\n","        elif unidad_origen == \"fahrenheit\" and unidad_destino == \"celsius\":\n","            return fahrenheit_a_celsius(cantidad)\n","        else:\n","            return \"Conversión no soportada.\"\n","    elif tipo_conversion == \"peso\":\n","        if unidad_origen == \"kilogramos\" and unidad_destino == \"libras\":\n","            return kilogramos_a_libras(cantidad)\n","        elif unidad_origen == \"libras\" and unidad_destino == \"kilogramos\":\n","            return libras_a_kilogramos(cantidad)\n","        elif unidad_origen == \"gramos\" and unidad_destino == \"kilogramos\":\n","            return gramos_a_kilogramos(cantidad)\n","        elif unidad_origen == \"kilogramos\" and unidad_destino == \"gramos\":\n","            return kilogramos_a_gramos(cantidad)\n","        else:\n","            return \"Conversión no soportada.\"\n","    else:\n","        return \"Tipo de conversión no soportada.\"\n","\n","# Realizar la conversión\n","resultado = convertir(cantidad, unidad_origen, unidad_destino, tipo_conversion)\n","\n","# Mostrar el resultado de la conversión\n","print(f\"{cantidad} {unidad_origen} son {resultado} {unidad_destino}.\")"]}]}